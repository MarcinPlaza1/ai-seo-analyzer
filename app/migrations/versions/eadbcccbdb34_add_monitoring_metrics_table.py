"""Add monitoring metrics table

Revision ID: eadbcccbdb34
Revises: 001
Create Date: 2024-12-26 13:39:52.015799

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'eadbcccbdb34'
down_revision = '001'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_blocked', sa.Boolean(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('security_log', sa.JSON(), nullable=True),
    sa.Column('encrypted_data', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.add_column('audit_pages', sa.Column('status', sa.String(), nullable=True))
    op.add_column('audit_pages', sa.Column('meta_title', sa.String(), nullable=True))
    op.add_column('audit_pages', sa.Column('meta_description', sa.String(), nullable=True))
    op.add_column('audit_pages', sa.Column('content', sa.Text(), nullable=True))
    op.add_column('audit_pages', sa.Column('analysis_data', sa.Text(), nullable=True))
    op.add_column('audit_pages', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('audit_pages', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.create_index('idx_audit_page_status', 'audit_pages', ['status'], unique=False)
    op.create_index('idx_audit_page_url', 'audit_pages', ['url'], unique=False)
    op.drop_constraint('audit_pages_audit_id_fkey', 'audit_pages', type_='foreignkey')
    op.create_foreign_key(None, 'audit_pages', 'audits', ['audit_id'], ['id'])
    op.drop_column('audit_pages', 'visited')
    op.drop_column('audit_pages', 'page_data')
    op.add_column('audits', sa.Column('owner_id', sa.Integer(), nullable=True))
    op.create_index('idx_audit_status_created', 'audits', ['status', 'created_at'], unique=False)
    op.create_index('idx_audit_url', 'audits', ['url'], unique=False)
    op.create_foreign_key(None, 'audits', 'users', ['owner_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'audits', type_='foreignkey')
    op.drop_index('idx_audit_url', table_name='audits')
    op.drop_index('idx_audit_status_created', table_name='audits')
    op.drop_column('audits', 'owner_id')
    op.add_column('audit_pages', sa.Column('page_data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('audit_pages', sa.Column('visited', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'audit_pages', type_='foreignkey')
    op.create_foreign_key('audit_pages_audit_id_fkey', 'audit_pages', 'audits', ['audit_id'], ['id'], ondelete='CASCADE')
    op.drop_index('idx_audit_page_url', table_name='audit_pages')
    op.drop_index('idx_audit_page_status', table_name='audit_pages')
    op.drop_column('audit_pages', 'updated_at')
    op.drop_column('audit_pages', 'created_at')
    op.drop_column('audit_pages', 'analysis_data')
    op.drop_column('audit_pages', 'content')
    op.drop_column('audit_pages', 'meta_description')
    op.drop_column('audit_pages', 'meta_title')
    op.drop_column('audit_pages', 'status')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ### 